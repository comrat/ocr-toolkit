#ifndef __OCR_META__
#define __OCR_META__

#define uchar unsigned char
#define CR_BLACK 255
#define CR_WHITE 0

/* Тип компоненты. */
typedef enum
{
	PICTURE,	// рисунок
	NOISE,		// шум или часть фона
	TEXT,		// текст
	FORMULA		// формула
} comp_type;

/* Стуктура для хранения данных об изображении. */
typedef struct
{
	uchar *pix;		// указатель на изображение
	int width;		// ширина изображения
	int height;		// высота изображения
	int stride;		// число байт на каждую строку изображения
	int bytes_for_pix;	// число байт на каждый пиксел изображения
} ocr_img_info;

/* Структура координаты точки */
typedef struct
{
	int x;	// координата по горизонтали
	int y;	// координата по вертикали
} coord;

/* Структура для хранения сетки наложенной на изображение,
   каждая клетка которой явлется либо фоном либо нет. */
typedef struct
{
	uchar **net;	// указатель на двумерную сетку
	int width;	// ширина
	int height;	// высота
	int cell_width;	// ширина клетки, занимаемая на изображении
	int comp_count;	// число компонент связности на сетке
} ocr_cells_net;

/* Структура информации о компоненте связности. */
typedef struct
{
	coord *coords;	// указатель на массив координат точек
			// компоненты связности
	coord up_left;	// координата левой врехней точки диагонали
			// прямоугольной области компоненты
	coord bot_right;// нижняя правая точка диагонали
	coord center;	// центр прямоугольной области
	comp_type type;	// тип компоненты
	int size;	// число точек из которых состоит компонента
	int width;	// ширина прямоугольной области
	int height;	// высота прямоугольной области
} ocr_con_comp;

/* Структура с инфорамацией о текстосодержащей области
изображения. */
typedef struct
{
	uchar **pix;	// 2-мерный массив пикселей текстовой области
	int x;		// x - координата начала области
	int y;		// y - координата начала области
	int width;	// ширина области
	int height;	// высота области
} ocr_text_area;

/* Структура с информацией о доле черных пикселей
в строке или столбце сегмента. */
typedef struct
{
	double *portion;// доля черных пикселей в каждой строке или столбце
	int count;	// число строк или столбцов в компоненте
} ocr_segm_stat_info;

/* Структура для хранения информации об интервалах
возрастания и убывания значений гистограммы. */
typedef struct
{
	int count;	// число подряд идущих значени гистограммы
	uchar position;	// значение указывющие положение значений
			// 0 - если ниже, 255 - если выше
} ocr_hist_interval;

#endif	/* __OCR_META__ */
